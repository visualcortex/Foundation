/******************************************************************************
 * @file
 * @author Ivan Makarov <im.visualcortex@gmail.com>
 * 
 * @section LICENSE
 *
 * Copyright (C) 2012, Ivan Makarov
 * Licensed under the MIT license.
 *
 *****************************************************************************/

#pragma once

#include <Dream/Foundation/Cryptography.hpp>
#include <fstream>

using namespace Dream;
using namespace Dream::Cryptography;

namespace
{
    const byte DATA_PART[] = 
    {
        0x1b, 0xc0, 0xf7, 0xd8, 0xc3, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc,
        0x83, 0xec, 0x1c, 0x53, 0x55, 0x6a, 0x01, 0x68, 0xfc, 0x52, 0x40, 0x00, 0x6a, 0x00, 0x32, 0xdb,
        0xff, 0x15, 0x00, 0x50, 0x40, 0x00, 0x8b, 0xe8, 0x85, 0xed, 0x74, 0x4f, 0x56, 0x57, 0x33, 0xff,
        0x83, 0xff, 0x0c, 0x73, 0x3d, 0x8b, 0x87, 0x24, 0x80, 0x40, 0x00, 0x6a, 0x04, 0x50, 0x55, 0xff,
        0x15, 0x1c, 0x50, 0x40, 0x00, 0x8b, 0xf0, 0x85, 0xf6, 0x74, 0x20, 0x8d, 0x4c, 0x24, 0x10, 0x51,
        0x56, 0xff, 0x15, 0x04, 0x50, 0x40, 0x00, 0x85, 0xc0, 0x74, 0x09, 0x83, 0x7c, 0x24, 0x14, 0x04,
        0x75, 0x02, 0xb3, 0x01, 0x56, 0xff, 0x15, 0x08, 0x50, 0x40, 0x00, 0x83, 0xc7, 0x04, 0x84, 0xdb,
        0x74, 0xbe, 0x55, 0xff, 0x15, 0x08, 0x50, 0x40, 0x00, 0x5f, 0x5e, 0x5d, 0x8a, 0xc3, 0x5b, 0x83,
        0xc4, 0x1c, 0xc3, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc,
        0xe8, 0x5b, 0xff, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x12, 0xa1, 0xf8, 0x83, 0x40, 0x00, 0x6a, 0x00,
        0x50, 0xff, 0x15, 0xcc, 0x50, 0x40, 0x00, 0x85, 0xc0, 0x75, 0x08, 0x6a, 0x00, 0xff, 0x15, 0xf4,
        0x56, 0xff, 0x15, 0x04, 0x50, 0x40, 0x00, 0x85, 0xc0, 0x74, 0x09, 0x83, 0x7c, 0x24, 0x14, 0x04
    };

    const size_t SIZE_DATA_PART = sizeof(DATA_PART); // 192 B
    const size_t SIZE_DATA		= 0x18000; // 96 KB
    const size_t NUM_DATA_PARTS = SIZE_DATA/SIZE_DATA_PART;

    const string CHECKSUM_00	= "00000000"; // 0

    const uint32 CHECKSUM_01	= 0x00019d56; // SIZE_DATA
    const uint32 CHECKSUM_02	= 0x00019955; // SIZE_DATA - 1
    const uint32 CHECKSUM_03	= 0x00019940; // SIZE_DATA - 2
    const uint32 CHECKSUM_04	= 0x0002753e; // SIZE_DATA - 3
    const uint32 CHECKSUM_05	= 0x0000c115; // 3
    const uint32 CHECKSUM_06	= 0x0000c01d; // 2
    const uint32 CHECKSUM_07	= 0x0000001c; // 1
    const uint32 CHECKSUM_08	= 0x00000000; // 0
    const uint32 CHECKSUM_09	= 0x0000ceab; // SIZE_DATA/2
    const uint32 CHECKSUM_10	= 0x0000cec7; // SIZE_DATA/2 + 1

    const string MD5_00			= "d41d8cd98f00b204e9800998ecf8427e"; // 0
    const string MD5_01			= "520d7b13e1636d0b75aa7b9a98fe3c25"; // SIZE_DATA_PART

    const string SHA1_00		= "da39a3ee5e6b4b0d3255bfef95601890afd80709"; // 0
    const string SHA1_01		= "fb5f7cc0c928e21bb06f7354160bc60d7783dc4a"; // SIZE_DATA_PART

    const string NILSIMSA_00	= "0000000000000000000000000000000000000000000000000000000000000000"; // 0
}
